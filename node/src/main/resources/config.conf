net {
  type = mainnet
}

storage {
  # Directory for storing persistent data
  db.version = 2,
  db.engine = "ROCKSDB",
  db.sync = false,
  db.directory = "database",
  index.directory = "index",
  transHistory.switch = "on",
  needToUpdateAsset = true

  //dbsettings is needed when using rocksdb as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //we'd strongly recommend that do not modify it unless you know every item's meaning clearly.
  dbSettings = {
    levelNumber = 7
    //compactThreads = 32
    blockSize = 64  // n * KB
    maxBytesForLevelBase = 256  // n * MB
    maxBytesForLevelMultiplier = 10
    level0FileNumCompactionTrigger = 4
    targetFileSizeBase = 256  // n * MB
    targetFileSizeMultiplier = 1
  }

  //backup settings when using rocks db as the storage implement (db.version=2 and db.engine="ROCKSDB").
  //if you want to use the backup plugin, please confirm set the db.version=2 and db.engine="ROCKSDB" above.
  backup = {
    enable = false  // indicate whether enable the backup plugin
    propPath = "prop.properties" // record which bak directory is valid
    bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
    bak2path = "bak2/database"
    frequency = 10000   // indicate backup db once every 10000 blocks processed.
  }
}

node.discovery = {
  enable = true
  persist = true
  bind.ip = ""
  external.ip = null
}

node.backup {
  # udp listen port, each member should have the save configuration
  port = 10001
  # my priority, each member should use different priority
  priority = 8
  # time interval to send keepAlive message, each member should have the save configuration
  keepAliveInterval = 3000
  # peer's ip list, can't contain mine
  members = [
    # "ip",
    # "ip"
  ]
}

crypto {
  #engine = "eckey"
  engine = "sm2"

}

node {
  listen.port = 6666
  # second
  connection.timeout = 2
  tcpNettyWorkThreadNum = 0
  udpNettyWorkThreadNum = 1
  # Number of validate sign thread, default availableProcessors / 2
  # validateSignThreadNum = 16
  connectFactor = 0.3
  activeConnectFactor = 0.1
  maxActiveNodes = 30
  maxActiveNodesWithSameIp = 10
  minParticipationRate = 0
  disconnectNumberFactor = 0.4
  maxConnectNumberFactor = 0.8
  receiveTcpMinDataLength = 2048
  isOpenFullTcpDisconnect = true

  # Active establish connection in any case
  # "ip:port",
  # "ip:port"
  active = [
    #"127.0.0.1:6667"
  ]

  # Passive accept connection in any case
  # "ip:port",
  # "ip:port"
  passive = [
  ]

  # "ip:port",
  # "ip:port"
  fastForward = [
  ]

  http {
    ledgerYiNodeEnable = true
    ledgerYiNodePort = 8090
  }

  rpc {
    port = 50051
    # Connection being idle for longer than which will be gracefully terminated
    maxConnectionIdleInMillis = 60000
    # Transactions can only be broadcast if the number of effective connections is reached.
    minEffectiveConnection = 0
  }
}

# List of the seed nodes, Seed nodes are stable full nodes
# ip.list = [
#   "ip:port",
#   "ip:port"
# ]
seed.node = {
  ip.list = [
    #"127.0.0.1:6667"
  ]
}

genesis.block = {
  # Reserve balance
  assets = [
    # the account of payment
    {
      accountName = "gensis"
      accountType = "AssetIssue"
      address = "516a2989dd5d8dfa73aed093bdd14fce13a9c73d"
      balance = "10000000000000000"
    },

    # the account of coin burn
    {
      accountName = "burn"
      accountType = "AssetIssue"
      address = "50bae38baeb4a99c2d271ac77294683ab4b3b5ed"
      balance = "-9223372036854775808"
    }
  ]

  masters = [
    {
      address: 516a2989dd5d8dfa73aed093bdd14fce13a9c73d
      url = "http://Test.org",
      voteCount = 106
    },
    {
      address: 50bae38baeb4a99c2d271ac77294683ab4b3b5ed
      url = "http://Test.org",
      voteCount = 106
    },
  ]

  timestamp = "1602816381000" #2020-10-16 10:46:21
  parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

#local Master's address
localMasterAccountAddress = 50bae38baeb4a99c2d271ac77294683ab4b3b5ed

#local Master's private key
localMaster = [
  d2ae983a039134fb46fd060c8d2dc3de83bb7984adede4f01b8ea9658cfc063a
]

block = {
  # the first master should set false, others set true.
  needSyncCheck = false
}

# Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
tx.reference.block = "solid"